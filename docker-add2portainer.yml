---
######################################################################################
#
#       Add hosts as endpoints in portainer
#
######################################################################################
- name: Play om een docker hosts als endpoint aan portainer toe te voegen
  hosts: dockerhosts
  become: false

  vars_files:
    - vars/secrets.yml

  vars:
    portainer_hostname: pindos
    portainer_endpoint: "http://{{ portainer_hostname }}:9000/api"
    endpoints:
      - {name: "{{ ansible_hostname }}", url: "tcp://{{ ansible_default_ipv4.address }}:2375"}


  tasks:

    - name: Generate authentication token
      uri:
        url: "{{ portainer_endpoint }}/auth"
        method: POST
        return_content: true
        body_format: json
        body: '{"Username": "{{ portainer_admin_user }}", "Password": "{{ portainer_admin_password }}"}'
      register: auth_token
      when: portainer_admin_user and portainer_admin_password is defined


    - name: Get Endpoints
      uri:
        url: "{{ portainer_endpoint }}/endpoints"
        method: GET
        return_content: true
        headers:
          Authorization: Bearer {{ (auth_token.content|from_json).jwt }}
      register: portainer_known_endpoints_raw


    - name: Save endpoints as fact
      set_fact:
        portainer_known_endpoints: "{{ portainer_known_endpoints_raw.json | map(attribute='Name') | list }}"


    #- name: "Show known endpoints"
    #  debug: msg="{{ portainer_known_endpoints }}"


    - name: Add Endpoints
      shell: |
        curl --silent --show-error -o - {{ portainer_endpoint }}/endpoints \
          -H "Authorization: Bearer {{ (auth_token.content|from_json).jwt }}" \
          -F "EndpointCreationType=1" \
          -F "Name={{ item.name }}" \
          -F "URL={{ item.url }}" 
      args:
        warn: false
      with_items:
        - "{{ endpoints | list }}"
      when: item.name not in portainer_known_endpoints
      register: response
      tags: [skip_ansible_lint]


    #- name: Verifying calls
    #  fail:
    #    msg: "Could not add endpoint: {{ item.item.name }}"
    #  when: item.stdout is defined and (item.stdout|from_json).err is defined
    #  with_items:
    #    - "{{ response.results }}"

