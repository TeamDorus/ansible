---
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
#       O L Y M P O S
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: Playbook to configure the host "olympos"
  hosts: olympos
  gather_facts: true


  vars_files:
    - "vars/docker_general.yml"
    - "vars/secrets.yml"



  tasks:

    ########################################################################################
    # Telegraf not in docker container because not all MIB files are available
    #
    - name: Installeer telegraf and snmp packages
      apt:
        name:
          - telegraf
          - snmp
          - snmp-mibs-downloader
          - unzip
        state: present
      vars:
        ansible_become: true   # install as root

    - name: Download Synology MIB file
      get_url:
        url: "https://global.download.synology.com/download/Document/Software/DeveloperGuide/Firmware/DSM/All/enu/Synology_MIB_File.zip"
        dest: "/home/eric"
      register: download_MIB

       
    - name: Extract MIB file to root folder
      unarchive:
        remote_src: true
        src: "/home/eric/Synology_MIB_File.zip"
        dest: "/home/eric"
      when: download_MIB.changed | bool


    - name: Copy MIB files to correct folder
      copy: 
        remote_src: true
        src: "/home/eric/Synology_MIB_File/"
        dest: "/var/lib/mibs/ietf"
      when: download_MIB.changed | bool
      vars:
        ansible_become: true   # execute as root


    - name: Create telegraf.conf file from template
      template:
        src: "roles/docker_telegraf/templates/telegraf-olympos.conf.j2"
        dest: "/etc/telegraf/telegraf.conf"
      vars:
        ansible_become: true   # execute as root


    - name: Restart telegraf
      systemd:
        name: telegraf
        state: restarted
      vars:
        ansible_become: true   # execute as root

    ########################################################################################



    - include_role:
        name: docker
      vars:
        ansible_become: true   # install as root

    - include_role:
        name: config_portainer_endpoint_create

    - include_role:
        name: docker_influxdb


    - include_role:
        name: docker_grafana

    - include_role:
        name: docker_heimdall

    - include_role:
        name: docker_hostscanner

    - include_role:
        name: config_hostscanner_entry_create


    - name: Add NetBox tags to the virtual machine
      netbox.netbox.netbox_virtual_machine:
        netbox_url: "{{ netbox_api_url }}"
        netbox_token: "{{ netbox_api_token }}"
        data:
          name: "{{ ansible_hostname }}"
          tags: 
          - ansible
          - docker
          - "{{ ansible_distribution }}-{{ ansible_distribution_release }}"
        state: present
      delegate_to: localhost
      when: ansible_facts['virtualization_role'] == "guest"

