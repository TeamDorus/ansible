---
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
#       Install docker & docker-compose
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: Make sure all packages are up-to-date
  apt:
    upgrade: dist
    update_cache: true


- name: Install prerequisites
  apt:
    name:
      - net-tools
      - python3-pip
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present


- name: Add docker apt key
  # source: https://github.com/geerlingguy/ansible-role-docker/blob/master/tasks/setup-Debian.yml
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    dest: /etc/apt/trusted.gpg.d/docker.asc
    mode: '0644'
    force: false
  # apt_key:
  #   url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"


- name: Add docker repo
  apt_repository:
    repo: "deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"


- name: Install docker & docker-compose for non Raspberry
  apt:
    name:
      - docker-compose-v2
    state: present
    update_cache: true
  when: ansible_distribution_release != 'bookworm'

- name: Install docker & docker-compose for Raspberry
  apt:
    name:
      - docker-compose
    state: present
    update_cache: true
  when: ansible_distribution_release == 'bookworm'


- name: Add user to the docker group
  user:
    name: "{{ docker_user }}"
    groups: docker
    append: true
  register: group


- name: Reboot remote server because user is added to the group (and necessary for RasPi after installing docker)
  reboot:
  when: group.changed


- name: Create directory for the docker persistent volumes
  file:
    path: /opt/docker
    state: directory
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"


#- name: Remove AppArmor package
#  apt:
#    name: apparmor
#    state: absent
#    purge: true
#    autoremove: true


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
#       Setup remote docker api for Portainer
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: Create directory for the docker remote api service definition file
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: '0755'


- name: Retrieve full path to dockerd
  command: which dockerd
  register: dockerd_path


- name: Create the file for docker remote api service definition from template
  template:
    src: docker-remote-api.conf.j2
    dest: /etc/systemd/system/docker.service.d/docker-remote-api.conf
  register: docker_service


- name: Restart the docker service and issue a deamon-reload
  systemd:
    name: docker
    state: restarted
    daemon_reload: true
  when: docker_service.changed


- name: Add docker service to VM config in Netbox
  include_role:
    name: config_netbox_service_create
