---
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
#       Install docker & docker-compose
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: Make sure all packages are up-to-date
  apt:
    upgrade: dist
    update_cache: true


- name: Install prerequisites
  apt:
    name:
      - net-tools
      - python3-pip
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present


- name: Add docker apt-key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg


- name: Add docker repo
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable


- name: Disable AppArmor service since it conflicts with Docker
  systemd:
    name: apparmor
    state: stopped
    enabled: false


- name: Remove AppArmor package
  apt:
    name: apparmor
    state: absent


- name: Install docker
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: true


- name: Add user to the docker group
  user:
    name: "{{ docker_user }}"
    groups: docker
    append: true
  register: group


- name: Reboot remote server when user is added to the group
  reboot:
  when: group.changed


- name: Install docker-compose
  pip:
    name: docker-compose


- name: Create directory for the docker persistent volumes
  file:
    path: /opt/docker
    state: directory
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
#       Setup remote docker api for Portainer
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: Create directory for the docker remote api service definition file
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: '0755'


- name: Copy the file for docker remote api service definition to the target
  copy:
    src: docker-remote-api.conf
    dest: /etc/systemd/system/docker.service.d/docker-remote-api.conf
    owner: root
    group: root
    mode: '0644'
  register: docker_service


- name: Restart the docker service and issue a deamon-reload
  systemd:
    name: docker
    state: restarted
    daemon_reload: true
  when: docker_service.changed
