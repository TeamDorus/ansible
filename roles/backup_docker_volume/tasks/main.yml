---
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
#   Backup a docker volume - volume folder is passed as variable "volume_folder"
#
#       variable "stop_for_backup" defines whether the container is stopped
#       before making a backup or not
#
#       must be called variable ansible_become = true
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: Load in secret variables
  include_vars: "vars/secrets.yml"


- name: Ensure that the backup root exists
  ansible.builtin.file:
    path: "{{ backup_mnt }}"
    state: directory
    mode: '0755'


- name: Ensure that the share is mounted on the backup root
  ansible.posix.mount:
    src: "{{ backup_share }}"
    path: "{{ backup_mnt }}"
    opts: "rw,username={{ backup_user }},password={{ backup_password }}"
    fstype: cifs
    state: ephemeral
  

- name: Define the backup folder
  set_fact:
    backup_folder: "{{ backup_mnt }}/Docker-Backup/{{ ansible_hostname }}"


- name: Ensure that the backup folder exists
  ansible.builtin.file:
    path: "{{ backup_folder }}"
    state: directory
    mode: '0755'


- name: Define the backup filename
  set_fact:
    backup_file: "{{ volume_folder.split('/') | last }}-{{ ansible_date_time.date }}.tgz"


- name: Stop the container (unless told not to "stop_for_backup = false")
  docker_compose:
    project_src: "{{ compose_folder }}"
    state: present
    stopped: true
  when: stop_for_backup is undefined or stop_for_backup is true


- name: Create backup of the volume directory
  archive:
    path: "{{ volume_folder }}"
    dest: "/tmp/{{ backup_file }}"


- name: Start the container (unless container was not stopped)
  docker_compose:
    project_src: "{{ compose_folder }}"
    state: present
    stopped: false
  when: stop_for_backup is undefined or stop_for_backup is true


- name: Copy the backup to the backup share
  copy:
    src: "/tmp/{{ backup_file }}"
    dest: "{{ backup_folder }}/"
    remote_src: true


- name: Delete backup file on remote host
  file:
    path: "/tmp/{{ backup_file }}"
    state: absent
