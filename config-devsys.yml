---
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
#         Play book to configuer development systems (server & workstation)
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: Playbook om een development systeem op te tuigen
  hosts:
    - tags_devsys
    - tags_devsys_workstation
  become: true


  pre_tasks:
    - name: Load variable files
      include_vars: "{{ item }}"
      with_first_found:
        - "vars/devsys_{{ ansible_distribution }}.yml"
        - "vars/devsys_default.yml"


  tasks:
    - name: Make sure all packages are up-to-date
      apt:
        upgrade: dist
        update_cache: true


    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    #
    #         Install generic tools
    #
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Installeer algemene (ontwikkel) tools
      apt:
        name:
          - git
          - tree
          - python3-pip
          - python3-venv
          - cifs-utils
          - net-tools
          - wireguard
        state: present

    - name: Installeer tools om repositories toe te voegen
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present


    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    #
    #         Install keys for ansible_user
    #
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Installeer privatekey voor ansible_user
      copy:
        src: "~{{ ansible_user }}/.ssh/id_rsa"
        dest: "~{{ ansible_user }}/.ssh/id_rsa"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'


    - name: Installeer privatekey voor ansible_user
      copy:
        src: "~{{ ansible_user }}/.ssh/id_rsa.pub"
        dest: "~{{ ansible_user }}/.ssh/id_rsa.pub"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'


    - name: Ensure public key is in users .ssh/authorized_keys
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "{{ item }}"
      with_file:
        - ~/.ssh/id_rsa.pub


    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    #
    #         Install ansible & related tools
    #
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Installeer ansible
      apt:
        name:
          - ansible
          - sshpass             # in case you want to use password based ssh login
        state: present

    - name: Installeer ansible collection for netbox
      command: /usr/bin/ansible-galaxy collection install netbox.netbox
      vars:
        ansible_become: false   # install as {{ ansible_user }}


    - name: Installeer ansible utils collection
      command: /usr/bin/ansible-galaxy collection install ansible.utils
      vars:
        ansible_become: false   # install as {{ ansible_user }}


    - name: Installeer ansible collection for zabbix
      command: /usr/bin/ansible-galaxy collection install community.zabbix
      vars:
        ansible_become: false   # install as {{ ansible_user }}


    - name: Installeer ansible test tools and other python modules
      pip:
        name:
          - yamllint
          - ansible-lint
          - proxmoxer
          - pynetbox
          - zabbix-api


    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    #
    #         Install python tools, flask, etc
    #
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Installeer python tools
      pip:
        name:
          - pylint


    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    #
    #         Install terraform
    #
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Voeg terraform apt-key toe
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg


    - name: Voeg terraform repo toe
      apt_repository:
        repo: deb [arch=amd64] https://apt.releases.hashicorp.com focal main

    - name: Installeer terraform
      apt:
        name: terraform
        state: present
        update_cache: true


    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    #
    #         Clone ansible GIT repository and related secrets files
    #
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Create ansible directory
      file:
        path: "{{ projects_dir }}/ansible"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Clone ansible repository
      git:
        repo: git@github.com:TeamDorus/ansible.git
        accept_hostkey: true
        dest: "{{ projects_dir }}/ansible"
        clone: true
        update: true
      vars:
        ansible_become: false   # clone as {{ ansible_user }}

    - name: Copy ansible vault secrets.yml
      copy:
        src: "{{ item }}"
        dest: "{{ projects_dir }}/ansible/vars/secrets.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
        decrypt: false          # do not decrypt the vault file
      with_first_found:
        - "~{{ ansible_user }}/ansible/vars/secrets.yml"
        - "~{{ ansible_user }}/Documents/ansible/vars/secrets.yml"

    - name: Copy ansible vault password file
      copy:
        src: "~{{ ansible_user }}/.ansible/passwd.txt"
        dest: "~{{ ansible_user }}/.ansible/passwd.txt"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'


    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    #
    #         Clone flaskapp GIT repository and related secrets files
    #
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Create flaskapp directory
      file:
        path: "{{ projects_dir }}/flaskapp"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Clone flaskapp repository
      git:
        repo: git@github.com:TeamDorus/flaskapp.git
        accept_hostkey: true
        dest: "{{ projects_dir }}/flaskapp"
        clone: true
        update: true
      vars:
        ansible_become: false   # clone as {{ ansible_user }}

    - name: Create virtual environment for flaskapp
      pip:
        requirements: "{{ projects_dir }}/flaskapp/flask/requirements.txt"
        virtualenv: "{{ projects_dir }}/flaskapp/flask/venv"
        virtualenv_command: "python3 -m venv"
      vars:
        ansible_become: false   # create as {{ ansible_user }}

    - name: Copy .env file with api keys etc
      copy:
        src: "{{ item }}"
        dest: "{{ projects_dir }}/flaskapp/flask/.env"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
        decrypt: false          # do not decrypt the vault file
      with_first_found:
        - "~{{ ansible_user }}/flaskapp/flask/.env"
        - "~{{ ansible_user }}/Documents/flaskapp/flask/.env"


#
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
#         Play book for development system worksattion
#           hosts: devworkstation
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: Playbook om development workstation addons op te tuigen
  hosts: tags_devsys_workstation
  become: true

  tasks:

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    #
    #         Install Sublime Text editor
    #
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Add Sublime apt-key
      apt_key:
        url: https://download.sublimetext.com/sublimehq-pub.gpg

    - name: Add Sublime repository
      apt_repository:
        repo: deb https://download.sublimetext.com/ apt/stable/

    - name: Install Sublime
      apt:
        name:
          - sublime-text
        state: present
        update_cache: true
